server:
  port: 7002

api:
  title: Story Service
  description: API for Story services

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui/index.html
---
spring:
  config:
    activate:
      on-profile: dev
  neo4j:
    uri: bolt://localhost:7687
    authentication:
      username: neo4j
      password: password
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://auth-server:9000
          jwk-set-uri: http://auth-server:9000/oauth2/jwks
      client:
        registration:
          friendship-service-oidc:
            provider: spring
            client-id: friendship-service
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: openid
            client-name: friendship-service-oidc
          friendship-service:
            provider: spring
            client-id: friendship-service
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: friendship.read,friendship.write
            client-name: friendship-service
        provider:
          spring:
            issuer-uri: http://auth-server:9000
  servlet:
    multipart:
      max-file-size: 1000MB
      max-request-size: 1000MB
      location: ${java.io.tmpdir}
      enabled: true

---
spring:
  config:
    activate:
      on-profile: docker
  data:
    mongodb:
      database: docker_friendship
      host: mongo
      port: 27017
      authentication-database: admin
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://authentication-service:9000
          jwk-set-uri: http://authentication-service:9000/oauth2/jwks
      client:
        registration:
          friendship-service-oidc:
            provider: spring
            client-id: friendship-service
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: openid
            client-name: friendship-service-oidc
          friendship-service:
            provider: spring
            client-id: friendship-service
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: friendship.read,friendship.write
            client-name: friendship-service
        provider:
          spring:
            issuer-uri: http://authentication-service:9000
  servlet:
    multipart:
      max-file-size: 1000MB
      max-request-size: 1000MB
      location: ${java.io.tmpdir}
      enabled: true
---
spring:
  config:
    activate:
      on-profile: prod
  data:
    mongodb:
      database: prod_friendship
      host: mongo
      port: 27017
      authentication-database: admin
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://authentication-service:9000
          jwk-set-uri: http://authentication-service:9000/oauth2/jwks
      client:
        registration:
          friendship-service-oidc:
            provider: spring
            client-id: friendship-service
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: openid
            client-name: friendship-service-oidc
          friendship-service:
            provider: spring
            client-id: friendship-service
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: friendship.read,friendship.write
            client-name: friendship-service
        provider:
          spring:
            issuer-uri: http://authentication-service:9000
  servlet:
    multipart:
      max-file-size: 1000MB
      max-request-size: 1000MB
      location: ${java.io.tmpdir}
      enabled: true

